O(1) O(n) O(n^2)


# O(1)
def test(arr):
  if len(arr) < 2:
    return 0
  return arr[0] + arr[1]


# O(n) X
def test(arr):
  count = 0

  for el in arr:
    count += el

  return count

# O(n^2)
def test(arr):
  count = 0 
  
  for el in arr:
     for al in arr:
       count = el * ar

  return count

Временная сложность зависит от количества операций, которые присутсвуют в алгоритме.
Если количество операций не зависит от входных данных, то это константная сложность O(1).
Если количество операций линейно зависит от входных данных, т.е присутствуют не вложенные циклы,
зависящие от размеров входных данных, то у нас линейная сложность O(n).
Если количество операций квадратично зависит от входных данных, т.е присутствуют вложенные циклы,
зависящие от размеров входных данных, то у нас квадратичная сложность O(n^2).
